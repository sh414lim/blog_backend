let Koa,Router,bodyParser,mongoose,api,jwtMiddleware;_c3e‍.w("koa",[["default",["Koa"],function(v){Koa=v}]]);_c3e‍.w("koa-router",[["default",["Router"],function(v){Router=v}]]);_c3e‍.w("koa-bodyparser",[["default",["bodyParser"],function(v){bodyParser=v}]]);_c3e‍.w("mongoose",[["default",["mongoose"],function(v){mongoose=v}]]);_c3e‍.w("./api",[["default",["api"],function(v){api=v}]]);_c3e‍.w("./lib/jwtMiddleware",[["default",["jwtMiddleware"],function(v){jwtMiddleware=v}]]);require('dotenv').config() 










//비구조화 할당을 통해 process.ebv 내부 값에 대한 레퍼런스 만들기
const{PORT,MONGO_URL}=process.env;

mongoose
.connect(MONGO_URL,{useNewUrlParser:true,useFindAndModify:false})
.then(()=>{
    console.log('Connected to MongoDB');
})
.catch(e=>{
    _c3e‍.g.console.error(e);
});
 

const app=new Koa();
const router=new Router();

//라우터 설정
router.use('/api',api.routes()); //api 라우트 적용


//라우터 적용전에 bodyparser 적용

app.use(bodyParser());
app.use(jwtMiddleware);

//app인스턴스에 라우터 적용
app.use(router.routes()).use(router.allowedMethods());

//PORT 가 지정되어 있지 않다면 4000을 사용
const port=PORT||4000;

app.listen(port,()=>{
    _c3e‍.g.console.log('Listening to port %d',port);
});



